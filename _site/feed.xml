<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://ageof.info/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://ageof.info/feed.xml" rel="self" type="application/atom+xml" /><link href="http://ageof.info/" rel="alternate" type="text/html" /><updated>2017-02-13T14:51:53-06:00</updated><id>http://ageof.info//</id><title type="html">Age of Info</title><subtitle>the professional blog of Elias Garcia for a Brave New World</subtitle><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><entry><title type="html">Tutorial: Setting Up a Twitter Bot Using Python and Tweepy</title><link href="http://ageof.info/setting-up-twitter-bot-with-python-and-tweepy" rel="alternate" type="text/html" title="Tutorial: Setting Up a Twitter Bot Using Python and Tweepy" /><published>2016-11-06T14:42:06-06:00</published><updated>2016-11-06T14:42:06-06:00</updated><id>http://ageof.info/setting-up-twitter-bot-with-python-and-tweepy</id><content type="html" xml:base="http://ageof.info/setting-up-twitter-bot-with-python-and-tweepy">&lt;p&gt;In my previous &lt;a href=&quot;http://ageof.info/Setting-Up-Python3-On-Linux&quot;&gt;post about virtualenv and virtualenvwrapper&lt;/a&gt;, I used the Tweepy module in the basic demonstration of how virtual environments work. Building off of that, I want to now create a tutorial for making a basic Twitter bot using Tweepy!&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Beyond basic programming and an installation of Python 3.4.2 (or later), the following code should be viable for any system running on it.&lt;/p&gt;

&lt;h2 id=&quot;the-repo&quot;&gt;The Repo&lt;/h2&gt;

&lt;p&gt;I made a &lt;a href=&quot;https://github.com/ejmg/demoTwitterBot&quot;&gt;repo on Github with code that is ready to go&lt;/a&gt; with the bot this tutorial will show you how to use. Feel free to fork it, clone it, or just save it directly as a zip file (if you don’t know how to use Git) on your PC.&lt;/p&gt;

&lt;h1 id=&quot;why-tweepy&quot;&gt;Why Tweepy&lt;/h1&gt;

&lt;p&gt;Twitter bots, for those who don’t know, are semi to fully automated scripts that engage with Twitter’s REST or streaming Application Programming Interface (API). &lt;a href=&quot;https://github.com/tweepy/tweepy&quot;&gt;Tweepy&lt;/a&gt; is what you would call an “API wrapper,” a set of commands and functions that makes interacting with Twitter’s API a lot easier and more “human friendly.”&lt;/p&gt;

&lt;p&gt;Why would you want to do that? Is Twitter’s API really that bad? Well, it’s not that Twitter’s API is bad, but that Twitter has to make an API that’s incredibly flexible and detailed. They want to make a product that can do just about anything via API interaction alone but this comes at the cost of being “easy” to interact with on a more than one-off basis. Here’s an example of how to send a tweet using nothing but the API itself by posting a POST request:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;twitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statuses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;he&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;his&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peterfalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This post request makes a tweet saying “Maybe he’ll finally find his keys. #peterfalk” to the account it’s authorized for. Now herein lies another problem: this post request isn’t too messy, but this is only after setting up an OAuth2 authentication which verifies your identity and proves you can tweet from an account. An authorization using OAuth2 looks something like this (taken from &lt;a href=&quot;https://github.com/joestump/python-oauth2/wiki/Signing-A-Request&quot;&gt;python-oauth2’s repo&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'oauth_version'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'oauth_nonce'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate_nonce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'oauth_timestamp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())),&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'joestump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'photoid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;555555555555&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Set up instances of our Token and Consumer. The Consumer.key and &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Consumer.secret are given to you by the API provider. The Token.key and&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Token.secret is given to you after a three-legged authentication.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tok-test-key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tok-test-secret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con-test-key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con-test-secret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Set our token/key parameters&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'oauth_token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'oauth_consumer_key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Create our request. Change method, etc. accordingly.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Sign the request.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;signature_method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SignatureMethod_HMAC_SHA1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sign_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signature_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Okay, now that’s a bit more nasty. Now, if you want to do something that’s automated, the code above isn’t much of a problem, but that still leaves that post request earlier. Formatting a string https url like that can be problematic, especially if you don’t have your code prepared for each type of media or text character (emojis? different languages?). Better yet, since you are programming (whether veteran or not), you want to be lazy, right? Simply put, why do more work when the work has already been done for you by someone else?&lt;/p&gt;

&lt;p&gt;Enter Tweepy: tweepy is a module that makes interacting with Twitter’s API much easier than the stuff above. In fact, it makes it a total breeze and that’s why I’m going to show you how to make a bot using it.&lt;/p&gt;

&lt;h1 id=&quot;how-to-make-a-twitter-bot&quot;&gt;How to Make a Twitter Bot&lt;/h1&gt;

&lt;p&gt;First, we have to set up your account (or make a new account, if you want) so that it can give permission to your bot to tweet. If you are okay with using your current account and don’t want to learn what twitter aliases are, skip to step two.&lt;/p&gt;

&lt;h2 id=&quot;step-0-set-up-an-account&quot;&gt;Step 0: Set up an account&lt;/h2&gt;

&lt;p&gt;Rather than making a separate email to make a new twitter account, use an &lt;strong&gt;account alias.&lt;/strong&gt; This saves you the trouble of having to create another email account (which has its own password), and managing which twitter accounts go with which email, and instead simplifies your bots’ email to a simple alias of yours. Say your email is &lt;code class=&quot;highlighter-rouge&quot;&gt;example@example.com&lt;/code&gt;. To make an alias with Twitter, go to their &lt;a href=&quot;https://twitter.com/signup&quot;&gt;sign up page&lt;/a&gt; like you would normally, and use your email with &lt;code class=&quot;highlighter-rouge&quot;&gt;+someAliasHere&lt;/code&gt; as the email you use as shown:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/signup.png&quot; alt=&quot;signup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From there, setup your twitter account as desired (accounts you want to follow, AVI, bio, settings, etcetera). You should receive a notification in your email account saying you created a twitter account as if it was your first twitter. Congrats!&lt;/p&gt;

&lt;h2 id=&quot;step-1-give-app-permissions&quot;&gt;Step 1: Give App Permissions&lt;/h2&gt;

&lt;p&gt;Now that you have an account you can use to run a bot on, you have to authorize it so that the bot can use it. Make sure you are logged in with the account you want to run the bot on and go to &lt;a href=&quot;https://apps.twitter.com/&quot;&gt;https://apps.twitter.com/&lt;/a&gt;. You should immediately see a page saying you don’t have any apps and a button asking if you want to create one. Click it and fill it in with the information you want (none of this really matters for a simple bot). For my demo bot which I ran on my main account, I filled it in as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/create-app.png&quot; alt=&quot;create-app&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Accept the user agreement and click okay. The page will immediately change and present you with your app dashboard. Switch over to the tab called &lt;code class=&quot;highlighter-rouge&quot;&gt;keys and access tokens&lt;/code&gt;, where you will find the authorization information your bot will need. This comes in the form of &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer Key&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer Secret&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Access Token&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Access Token Secret&lt;/code&gt;. To get the latter two, you will have to click the button at the bottom of the page to generate them (you will not have them by default, don’t worry when you don’t see them). I’ve boxed in red the relevant information below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/auth-info.png&quot; alt=&quot;auth-info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In case it isn’t obvious by the picture and the warning Twitter gives you, &lt;strong&gt;do not share these keys with anyone&lt;/strong&gt;. While the non-secret keys/tokens are technically okay to know publicly, it doesn’t hurt to be on the safe side. Now, keep this page open or save these codes somewhere as you will need them in just a moment. &lt;strong&gt;ALSO&lt;/strong&gt;, your access token may have a dash in it - &lt;strong&gt;don’t&lt;/strong&gt; delete it. It was intentional and is a part of the token itself. Just copy and paste the info as given.&lt;/p&gt;

&lt;h2 id=&quot;step-2-hello-world&quot;&gt;Step 2: Hello World!&lt;/h2&gt;

&lt;p&gt;If you haven’t forked/cloned/zip’d my &lt;a href=&quot;https://github.com/ejmg/demoTwitterBot&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;demoTwitterBot&lt;/code&gt; repo from Github yet&lt;/a&gt;, I highly recommend you do. It has code that is ready to deploy so that once you create your &lt;code class=&quot;highlighter-rouge&quot;&gt;secret.py&lt;/code&gt; file in a moment, you are able to run the bot. Even if you plan on going line by line with me in this demo, it would help to have my code just in case something doesn’t work on your end outside of something not being right in your development environment. It also has commentary throughout it to help you understand what is happening so that you don’t ultimately need to use this guide when you go back to look at it!&lt;/p&gt;

&lt;h3 id=&quot;step-20-install-tweepy&quot;&gt;Step 2.0: Install tweepy&lt;/h3&gt;

&lt;p&gt;Making sure to use Python 3.4.2 or newer, create a virtualenv (or don’t, but you should) and install tweepy using &lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install tweepy&lt;/code&gt;. If you are using my repo, you can also just use &lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install -r requirements.txt&lt;/code&gt;, but since it’s only one module in this case, it really doesn’t make a difference. It should only take a few seconds for the module to install and your terminal should show output confirming its installation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/tweepy.png&quot; alt=&quot;tweepy&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-21-create-a-secretpy-file&quot;&gt;Step 2.1: Create a &lt;code class=&quot;highlighter-rouge&quot;&gt;secret.py&lt;/code&gt; file&lt;/h3&gt;

&lt;p&gt;Remember those authorization tokens I told you to save earlier? We’re going to need them in order to twee with your bot. Make a &lt;code class=&quot;highlighter-rouge&quot;&gt;secret.py&lt;/code&gt; file in your working directory and insert &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer Key&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;CONSUMER_KEY&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer Secret&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;CONSUMER_SECRET&lt;/code&gt;, and so forth as shown below with X’s in place of the codes given:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/secret.png&quot; alt=&quot;secret&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Save the file and move on. If you are using Github (and you didn’t fork/clone my repo and your repo isn’t private) you should make a .gitignore file with &lt;code class=&quot;highlighter-rouge&quot;&gt;secret.py&lt;/code&gt; in it. You wouldn’t want the world to see your tokens!&lt;/p&gt;

&lt;h3 id=&quot;step-22-create-botpy&quot;&gt;Step 2.2: Create &lt;code class=&quot;highlighter-rouge&quot;&gt;bot.py&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Create a &lt;code class=&quot;highlighter-rouge&quot;&gt;bot.py&lt;/code&gt; file and add the following lines of code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACCESS_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACCESS_TOKEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONSUMER_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONSUMER_SECRET&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tweepy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ty&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What these lines do is the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Import the variables you declared in &lt;code class=&quot;highlighter-rouge&quot;&gt;secret.py&lt;/code&gt; which we did in order to not reveal their contents in the following code&lt;/li&gt;
  &lt;li&gt;Import the &lt;code class=&quot;highlighter-rouge&quot;&gt;tweepy&lt;/code&gt; module as &lt;code class=&quot;highlighter-rouge&quot;&gt;ty&lt;/code&gt;, an alias that just allows you to write shorter code when calling &lt;code class=&quot;highlighter-rouge&quot;&gt;tweepy&lt;/code&gt; modules&lt;/li&gt;
  &lt;li&gt;Import the random module from Python’s standard library, a pseudo random number generator,  which I’ll explain why in just a moment.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Speaking of #1 and #2, let’s now make a method that authorizes your bot via &lt;code class=&quot;highlighter-rouge&quot;&gt;tweepy&lt;/code&gt;. Write the following code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setTwitterAuth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAuthHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONSUMER_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONSUMER_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ACCESS_TOKEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACCESS_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;API&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this code does is simple: we create a function with &lt;code class=&quot;highlighter-rouge&quot;&gt;def&lt;/code&gt;, named it &lt;code class=&quot;highlighter-rouge&quot;&gt;setTwitterAuth()&lt;/code&gt;, and tell it to return a single variable &lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt;. From within this function, we use &lt;code class=&quot;highlighter-rouge&quot;&gt;tweepy&lt;/code&gt;’s &lt;code class=&quot;highlighter-rouge&quot;&gt;OAuthHandler()&lt;/code&gt; function to tell Twitter who you are and &lt;code class=&quot;highlighter-rouge&quot;&gt;set_access_token()&lt;/code&gt; to give authorization of your app to use your account with read/write privileges. With this access set, we then use the &lt;code class=&quot;highlighter-rouge&quot;&gt;auth&lt;/code&gt; object created to create an &lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt; object with &lt;code class=&quot;highlighter-rouge&quot;&gt;API()&lt;/code&gt;, which from here on is a key part of your bot as it allows you access to all of the API’s various functions.&lt;/p&gt;

&lt;p&gt;We are really close to finishing the first portion of your bot! The next thing we need to do is make a simple function to say Hello World with! While you don’t have to make this a function, I did for demonstration purposes. Type the following:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tweetHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This is an automated tweet&quot;&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;&quot; using a bot! Hello, World! #{}&quot;&lt;/span&gt;
                      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What you just did was create another function, &lt;code class=&quot;highlighter-rouge&quot;&gt;tweetHelloWorld()&lt;/code&gt; which takes your &lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt; object as an argument. With it, you perform the most fundamental action with Twitter’s API…you tweeted(!) with the &lt;code class=&quot;highlighter-rouge&quot;&gt;update_status()&lt;/code&gt; method by passing it a string. Notice how I formatted the string to include a random number from 0 to 10000? I did this because you may end up testing this bot a few times and Twitter blocks duplicate tweets from within a certain time window. This will (reasonably) make sure you don’t get a tweet blocked while testing it out. You will see this done with every tweet from here on but feel free to exclude it.&lt;/p&gt;

&lt;p&gt;Finally, let’s make your main driver for the script. Type the following:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setTwitterAuth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweetHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s it! Assuming everything is configured right on your end, save your file and tweet using your bot with the following command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python3 bot.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Test it out!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/helloworld.png&quot; alt=&quot;helloworld&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3-retrieving-account-information-and-searching-your-tweets&quot;&gt;Step 3: Retrieving Account Information and Searching Your Tweets&lt;/h2&gt;

&lt;p&gt;Congrats on your first bot tweet, but what else can we do? Turns out there’s a lot, which is why I highly recommend you &lt;a href=&quot;read Tweepy's documentation&quot;&gt;read Tweepy’s documentation&lt;/a&gt;. That said, I’ll introduce you to a few more concepts. Add the following to your bot and run it again:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setTwitterAuth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweetHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What we just did is retrieve the &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; object associated with the &lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt; object we authenticated, aka your bot’s account. There’s a lot of interesting info stored within this object which is why I had it printed to your terminal, which you should totally check out. Here’s what mine looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/user.png&quot; alt=&quot;user&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a lot of fields within your &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; object, such as your background image url, your last tweet, your bio, your user image url, whether you have 2FA enabled (whoops), and more. For now, let’s checkout your screen_name by entering the following into your driver:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This should print out into your terminal your “user handle”, the unique name your account has with the infamous @ symbol with Twitter. Notice, however, that Twitter does not include the actual “@” with your &lt;code class=&quot;highlighter-rouge&quot;&gt;screen_name&lt;/code&gt;. You should keep this in mind for when you try to @ people with your bot (as we will do later).&lt;/p&gt;

&lt;p&gt;Now add this into your driver:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I have {} followers and follow {} accounts! #{}&quot;&lt;/span&gt;
                      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;followers_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;friends_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                              &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Your bot should now tweet again with the number of followers you have and the number accounts you follow by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;followers&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;friends_count&lt;/code&gt; fields of your &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; object. Neat! But let’s go a step further. Let’s use your &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; object to pull a tweet from your own timeline. Let’s make another function by typing the following:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTimeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Go ahead and add this line to your driver as well:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;getTimeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This function is simple: it uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; object given to retrieve the last 100 tweets from its timeline using tweepy’s &lt;code class=&quot;highlighter-rouge&quot;&gt;user_timeline()&lt;/code&gt; function. We passed it your &lt;code class=&quot;highlighter-rouge&quot;&gt;user.screen_name&lt;/code&gt; so it knew which timeline to look at and told it to only get 100 tweets using &lt;code class=&quot;highlighter-rouge&quot;&gt;count=100&lt;/code&gt;. The tweets are returned to us in the form of a normal Python list which makes looking at them pretty easy. I have your print one to terminal so you can see the fields it holds. Like a &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; object, it contains a lot of information worth looking at if you want to do more work with Twitter’s API. Now that we have a list of your last 100 tweets, let’s do something with them. Create the following function:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getLastTweet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My last tweet is as&quot;&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;&quot; follows...#{}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getTimeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This shouldn't be possible...#{}!&quot;&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;...wait, my last tweet was about&quot;&lt;/span&gt;
                              &lt;span class=&quot;s&quot;&gt;&quot; tweeting my last tweet, do'oh! #{}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
                              &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RateLimitError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;You've hit the API limit! Try your bot in about an hour.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TweepError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;You've hit another error. This could be a lot of things, but &quot;&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&quot;I'll leave that to you to debug. The error is {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As before, add the following to your driver:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;getLastTweet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This may look like a lot of code but it really isn’t. Here’s what you are doing:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You tweet “My last tweet is as follows…”&lt;/li&gt;
  &lt;li&gt;You then call the &lt;code class=&quot;highlighter-rouge&quot;&gt;getTimeline()&lt;/code&gt; method you just typed earlier, retrieving the 100 last tweets from your timeline&lt;/li&gt;
  &lt;li&gt;You then do a list comprehension, taking only the &lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt; field from each tweet and remaking the list&lt;/li&gt;
  &lt;li&gt;You then enter a try-catch block which contains the following:
    &lt;ol&gt;
      &lt;li&gt;An if-else block which checks to the size of the list and tweets if it isn’t empty&lt;/li&gt;
      &lt;li&gt;an tweepy.RateLimitError catch block, which catches the error and tweets to terminal that you’ve gone over the API limit for the given hour&lt;/li&gt;
      &lt;li&gt;A general tweepy.TweepError catch block, which catches a multitude of errors and thus just prints the error type.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In case you haven’t already noticed, by tweeting “My last tweet is as follows…” before retrieving your last 100 tweets via &lt;code class=&quot;highlighter-rouge&quot;&gt;getTimeline()&lt;/code&gt;, your last tweet, by default, is that tweet just given ;) Furthermore, I put in the try-catch block to show you the built in error capabilities of tweepy. Rather than just leaving you to your own devices, tweepy has some built in data types that help you figure out what is going on with your code and mitigate a problem if detected. Finally, if you didn’t already, you now know what a try-catch block looks like. Congrats!&lt;/p&gt;

&lt;h2 id=&quot;step-4-search-twitter-and-replying-to-tweets&quot;&gt;Step 4: Search Twitter and Replying to Tweets&lt;/h2&gt;

&lt;p&gt;Good job on making it this far, we are almost done. Before I let you go, let’s try two more things: searching twitter and replying to tweets. Type up the following, first another method and then the following line into your driver:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;searchTweet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchTerm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;searchResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;Cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchTerm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchResults&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;searchResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchTweet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Hello World &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What we just did was simple: We searched Twitter for the explicit string “Hello World” and used the built in &lt;code class=&quot;highlighter-rouge&quot;&gt;Cursor&lt;/code&gt; iterator in the tweepy module. Let’s break it down:&lt;/p&gt;

&lt;p&gt;First off, notice how I escaped the quotes around “Hello World” so that when you searched it, it wasn’t just &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello World&lt;/code&gt; but instead was &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Hello World&quot;&lt;/code&gt;, get it? without using the paired &lt;code class=&quot;highlighter-rouge&quot;&gt;\&quot;&lt;/code&gt;, you would look up all tweets that contained any combination of words so long as it had &lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;world&lt;/code&gt; somewhere in the tweet. By searching &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Hello World&quot;&lt;/code&gt; instead, you look for only the tweets which have those two words consecutive somewhere within the tweet.&lt;/p&gt;

&lt;p&gt;Secondly, I used a special iterator type made by tweepy’s creators. This iterator, &lt;code class=&quot;highlighter-rouge&quot;&gt;Cursor&lt;/code&gt;, allows you to look up large quantities of tweets once in a cohesive and easily manageable way. While it isn’t obvious with the demonstrated code, if you look more into mining Twitter, you will see the benefits. &lt;a href=&quot;http://docs.tweepy.org/en/v3.5.0/index.html&quot;&gt;Again, read the tweepy docs for more info&lt;/a&gt;! After we retrieve the results using that Cursor, however, I go ahead and turn the iterated tweets into a simple list once again. In fact, I do it all at once with a single list comprehension if you look closer.&lt;/p&gt;

&lt;p&gt;Almost done! Now let’s take a random tweet from those search results and tweet back! Type up the following as before, first a method and then a line for your driver:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;replyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;randomTweet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@{} This is a demo search for 'hello world' with a bot, hello&quot;&lt;/span&gt;
             &lt;span class=&quot;s&quot;&gt;&quot; world! #{}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randomTweet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                  &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweetID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomTweet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweetID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;replyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You probably can read the code by now, but just to be clear: You take a random tweet from the search results list, you then make a string, &lt;code class=&quot;highlighter-rouge&quot;&gt;tweet&lt;/code&gt;, that is composed of the tweet’s message, you store the unique &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; of the random tweet selected, and then you respond to that random tweet using the &lt;code class=&quot;highlighter-rouge&quot;&gt;update_status()&lt;/code&gt; method but with the added argument of &lt;code class=&quot;highlighter-rouge&quot;&gt;tweetID&lt;/code&gt; just mentioned.&lt;/p&gt;

&lt;p&gt;What all of this does is create our message as desired and then tweet it at a specific tweet rather than just on your timeline. This is also the difference between just @’ing someone out of nowhere and responding to &lt;strong&gt;a specific tweet&lt;/strong&gt;, which this function should have done. Some times it doesn’t work, however, because when you use search, it doesn’t just look at tweets - it also looks at individuals bios and quoted tweets. Try it out yourself and see what I mean!&lt;/p&gt;

&lt;h2 id=&quot;step-5-experiment&quot;&gt;Step 5: Experiment!&lt;/h2&gt;

&lt;p&gt;Congrats, you did it! If everything ran as expected, every time you run the bot, you should get a string of tweets like these:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-28/tweets.png&quot; alt=&quot;tweets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that you have your bot running, you can experiment. I tried to modularize my code to what extent it could be done, so go ahead and tweak at it and see what happens. Try searching for different terms, looking up different information, see how many tweets you can pull at once, figure out how to reply &lt;strong&gt;only&lt;/strong&gt; to tweets based on searches, and, hell, figure out what the Twitter API’s limit is! :)&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this guide. If you have any input, edits, or just want to say hi, feel free to email me or @ me on twitter, preferably with your bot!&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="bots" /><category term="twitter" /><category term="tweepy" /><summary type="html">In my previous post about virtualenv and virtualenvwrapper, I used the Tweepy module in the basic demonstration of how virtual environments work. Building off of that, I want to now create a tutorial for making a basic Twitter bot using Tweepy!</summary></entry><entry><title type="html">Tutorial: Setting Up Virtualenv and Virtualenvwrapper on Linux for Python 3.x</title><link href="http://ageof.info/Setting-Up-Python3-On-Linux" rel="alternate" type="text/html" title="Tutorial: Setting Up Virtualenv and Virtualenvwrapper on Linux for Python 3.x" /><published>2016-11-06T14:42:06-06:00</published><updated>2016-11-06T14:42:06-06:00</updated><id>http://ageof.info/Setting-Up-Python3-On-Linux</id><content type="html" xml:base="http://ageof.info/Setting-Up-Python3-On-Linux">&lt;p&gt;Since I last posted in November, I’ve been doing a lot of work with Python on a few projects of mine. As a result, I have created my own work-flow for Python development.
That being said, one of the first things necessary for proper Python development is familiarizing yourself with and configuring Python &lt;em&gt;virtual environments&lt;/em&gt; and how to manage them using &lt;em&gt;virtualenvwrapper.&lt;/em&gt; Consequently, I wanted to write a short and quick guide to a properly configured Python Virtual Environment for Python 3.5+ on a Debian based system for other programmers new to Python and or Linux.&lt;/p&gt;

&lt;p&gt;For the full prerequisites to do this tutorial, look at the appendix at the end of this blog post. Finally, this blog post wouldn’t be possible with the tutorials I read during the course of my setup process when starting Python development, notably &lt;a href=&quot;https://realpython.com/blog/python/python-virtual-environments-a-primer/&quot;&gt;Real Python’s primer on Virtual Environments&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;python-virtual-environments&quot;&gt;Python Virtual Environments&lt;/h1&gt;

&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;

&lt;p&gt;Let’s say you want to build a twitter bot and you want to use Tweepy, a common wrapper module for interacting with Twitter’s API. Without using virtual environments, installing tweepy would simply require the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -H pip3 install tweepy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What this command does is the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; gives root privileges to the command so that it is installed system wide.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-H&lt;/code&gt; sets the path for $HOME to that of root.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install tweepy&lt;/code&gt; queries the Python Package Index for the Tweepy module.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can check that tweepy exists by entering the python3 terminal by importing the module as so:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-15/import-tweepy.png&quot; alt=&quot;import-tweepy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now why would installing Tweepy system wide be a problem? Well let’s start with where Tweepy is installed, which for Python 3.5 is something like &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/lib/python3.5/dist-packages/tweepy/&lt;/code&gt;. Now there’s no problem with this so long as you use the same version of Tweepy across every twitter bot you ever make, but what happens when 2 years later you find yourself with 4 different bots running on four different versions of Tweepy? How do you tell Python 3.5 to use Tweepy 1.1 for bot 1, 1.2 for bot 2, 1.3 for bot 3, and 1.4 for bot 4?&lt;/p&gt;

&lt;p&gt;The answer is you &lt;em&gt;really can’t.&lt;/em&gt; This is where Python Virtual Environments come into play.&lt;/p&gt;

&lt;h3 id=&quot;dependency-management-is-a-pain-and-security-is-important&quot;&gt;Dependency Management is a Pain and Security is Important&lt;/h3&gt;

&lt;p&gt;Virtual environments allow you to keep project specific installations of Python and the modules it uses. This is considered a best practice with software development as it ensures your dependencies are kept clean and organized for each project so that maintaining a given project through its life cycle remains a streamlined process. This practice is also known as “sandboxing” from a security standpoint, as you isolate packages to a local directory/environment rather than a system install. You especially want to do this with unverified modules. You can probably install well known/trusted packages system wide without worrying about security (but again, still shouldn’t because of dependencies), but you definitely don’t want to with ones that haven’t been code reviewed by a large community of developers. In other words, why would you give sudo access to a module that you don’t trust/know? When someone is executed with sudo privileges, you risk escalating an exploit to system wide access which means your entire machine is compromised, yikes!&lt;/p&gt;

&lt;h2 id=&quot;installing-virtual-environments-with-virtualenv&quot;&gt;Installing Virtual Environments with Virtualenv&lt;/h2&gt;

&lt;p&gt;Give the following command with pip3 in term:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip3 install virtualenv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now you can create a virtualenv with the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtualenv &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above command does the following:&lt;/p&gt;

&lt;p&gt;1) It created a subdirectory in your working directory with the name ‘test’
2) In this directory, it created a symbolic link to your system’s binary of Python3 but treats it as a local installation within this directory
3) When you now install any modules while using the ‘test’ virtual environment, they’ll be installed under &lt;code class=&quot;highlighter-rouge&quot;&gt;test/lib/&amp;lt;python_version&amp;gt;/site-packages&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let’s test this. Activate your virtualenv with &lt;code class=&quot;highlighter-rouge&quot;&gt;source test/bin/activate&lt;/code&gt;, and you will see your working line in term change to &lt;code class=&quot;highlighter-rouge&quot;&gt;(test) &amp;lt;user&amp;gt;@&amp;lt;machine&amp;gt;:&amp;lt;working directory&amp;gt;&lt;/code&gt; like so:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-15/test-virtualenv.png&quot; alt=&quot;virtualenv&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‘(test)’ tells you that you are currently working within the ‘test’ virtualenv! Congrats! Now see what version of Python3 you are using with the following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which python3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Because of how virtual environments work, you will see that the Python3 executable used is in &lt;code class=&quot;highlighter-rouge&quot;&gt;home/&amp;lt;user_name/test/bin/python3&lt;/code&gt;, rather than the system wide installation, &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/python3&lt;/code&gt;. Now let’s do another example: try importing the Tweepy module that we imported earlier in Python 3 from within terminal. You’ll notice that Python will tell you no such module exists because virtualenv only looks from within its install directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-15/tweepy-not-found.png&quot; alt=&quot;tweepy-not-found&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Remember above how it did work? When you work within a virtual environment, you are working with the locally installed packages of that specific virtual environment. &lt;strong&gt;This is why virtualenv is such a powerful tool.&lt;/strong&gt; It allows you to keep your projects, and its dependencies, organized and separate from one another.&lt;/p&gt;

&lt;p&gt;To get out of your virtualenv, simply execute the command &lt;code class=&quot;highlighter-rouge&quot;&gt;deactivate&lt;/code&gt; from within terminal. Go ahead and delete it as well with the following command (be careful to execute it as exactly from within the directory you had created ‘test’ in):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo rm -rf &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;While we are at it, let’s go ahead and uninstall Tweepy since such a package doesn’t need to be accessible system wide:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -H pip3 uninstall tweepy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;organizing-virtualenv-with-virtualenvwrapper&quot;&gt;Organizing Virtualenv with Virtualenvwrapper&lt;/h2&gt;

&lt;p&gt;Already, you have a very powerful tool for programming in Python. However, notice the command for activating your virtualenv from earlier, &lt;code class=&quot;highlighter-rouge&quot;&gt;source path/to/bin/activate&lt;/code&gt;. This seems a bit burdensome, doesn’t it? Also, look at how we had to delete it, &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo rm -rf test&lt;/code&gt; is a sudo level command that has to pass both the recursive and force flags to rm which is a pain and a little dangerous! Furthermore, imagine what happens once you have 5, 15, or 30 different environments - you will have to remember the sourcing path for each one of these, which becomes one extra thing you have to keep track of. This is where Virtualenvwrapper enters: as its name suggests, virtualenvwrapper acts as a wrapper for managing all of your virtual environments that you install, along with making the process of entering, creating, and deleting them much easier.&lt;/p&gt;

&lt;p&gt;Install (system wide) with the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -H pip3 install virtualenvwrapper
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After this, we have to finish the install by running the virtualenvwrapper.sh script which should be installed under &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin/virtualenvwrapper.sh&lt;/code&gt; but to be sure, run the following to check:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which virtualenvwrapper.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using the directory given, insert at the bottom of your &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; in your user directory the following four lines of code:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WORKON_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.virtualenvs
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROJECT_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/projects
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VIRTUALENVWRAPPER_PYTHON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/python3 &lt;span class=&quot;c&quot;&gt;#this would change if you were doing python2 instead or the non-default python3 (3.4, 3.6, etc)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /path/to/your/virtualenvwrapper.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These lines do is the following, in order:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;set &lt;code class=&quot;highlighter-rouge&quot;&gt;.virtualenvs&lt;/code&gt;, the directory where all your new virtualenvs will be organized, to the base of your home directory.&lt;/li&gt;
  &lt;li&gt;set the default directory for your projects at the base of your home directory&lt;/li&gt;
  &lt;li&gt;tells your system to use Python3 instead of Python2 for running virtualenvwrapper.sh, which does not exist as a module for Python2 (assuming you haven’t installed it like we have installed it for Python3)&lt;/li&gt;
  &lt;li&gt;sources the script &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenvwrapper.sh&lt;/code&gt; which will be needed every time you create a new virtual environment with virtualenvwrapper.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now source your &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; so the above changes are loaded by typing the following command in terminal:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should see something like the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ageof.info/assets/images/posts/2016-12-15/virtualenvwrapper-install.png&quot; alt=&quot;virtualenvwrapper-install&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Congrats! Now under &lt;code class=&quot;highlighter-rouge&quot;&gt;home/&amp;lt;user_name&amp;gt;/&lt;/code&gt;, you will see the directory &lt;code class=&quot;highlighter-rouge&quot;&gt;.virtualenvs/&lt;/code&gt; which will contain every virtualenv you manage with virtualenvwrapper! Go ahead and create one with the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkvirtualenv &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll automatically be entered into your new virtualenv and from here, it acts no differently had you done it with only the &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv test&lt;/code&gt; command from earlier. But unlike before, you can now use &lt;code class=&quot;highlighter-rouge&quot;&gt;rmvirtualenv &amp;lt;virtualenv&amp;gt;&lt;/code&gt; to delete a virtualenv in one simple command and &lt;code class=&quot;highlighter-rouge&quot;&gt;workon &amp;lt;virtualenv&amp;gt;&lt;/code&gt; to switch to your virtualenv of choice! Even if you can’t remember the names of your virtual environments, just entering &lt;code class=&quot;highlighter-rouge&quot;&gt;workon&lt;/code&gt; and hitting tab will then show all existing virtual environments so far. This behavior is mirrored with the other commands of virtualenvwrapper.&lt;/p&gt;

&lt;p&gt;And with that, you are done! Congrats on setting up virtualenv and virtualenvwrapper on Linux, you are now on your way to being a Python ninja!&lt;/p&gt;

&lt;h1 id=&quot;appendix-prerequisites&quot;&gt;Appendix: Prerequisites&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Ubuntu 16.04 LTS
This guide will assume you are running Ubuntu 16.04, the most recent version of the Ubuntu Linux distribution. That said, the instructions found here can easily be applied to Ubuntu derived distributions, Debian Wheezy+, and other Debian derivatives with some tweaking.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Python 3.4+
While Ubuntu 16.04 comes pre-installed with Python 3.5, the instructions below apply to any version from 3.4 on.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pip3 for Python 3
pip (Pip Installs Packages) is a module management system for Python. If you do not have pip3, it can be installed with the following command for Ubuntu 16.04:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install python3-pip
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;for 14.04:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install python3-pip3
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;After installing, make sure to update pip with:&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install --upgrade pip&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;To update the system wide (root) version of pip:&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo -H pip3 install --upgrade pip&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 --version&lt;/code&gt; should now give you the most recent version (as of this writing, that’s 9.0.1).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="ubuntu" /><category term="install" /><summary type="html">Since I last posted in November, I’ve been doing a lot of work with Python on a few projects of mine. As a result, I have created my own work-flow for Python development.
That being said, one of the first things necessary for proper Python development is familiarizing yourself with and configuring Python virtual environments and how to manage them using virtualenvwrapper. Consequently, I wanted to write a short and quick guide to a properly configured Python Virtual Environment for Python 3.5+ on a Debian based system for other programmers new to Python and or Linux.</summary></entry><entry><title type="html">New Theme and Done Moving</title><link href="http://ageof.info/New-Theme-Finalized-Migration" rel="alternate" type="text/html" title="New Theme and Done Moving" /><published>2016-11-06T14:42:06-06:00</published><updated>2016-11-06T14:42:06-06:00</updated><id>http://ageof.info/New-Theme-Finalized-Migration</id><content type="html" xml:base="http://ageof.info/New-Theme-Finalized-Migration">&lt;p&gt;Alright, knocking on wood, but I do believe I am finished migrating my old blog
and have managed to get my new theme up and running.&lt;/p&gt;

&lt;p&gt;While exporting from WordPress was no problem, there was some funky data tags
that they included and that did not play well with Jekyll. Of the weirdest and
most bothersome residuals were meta-data tags that carried over and resulted in
weird text popping up where it shouldn’t, along with any pictures that had a
caption not properly migrating said caption. As a result, I had to remove all
previous captions on my pictures, an unfortunate result given that I think
attribution of source is incredibly important. Maybe if I find the time I will
gradually fix those, but that is a much more burdensome project for later.&lt;/p&gt;

&lt;p&gt;As for my theme, I chose Minimal Mistakes by Michael Rose, a really cool guy who
knows how to make a really good theme. Not only do his themes look good, Rose is
really great at providing documentation and help through his GitHub. I
definitely banged my head against the wall for a few hours configuring this
entire website using this new theme, but the end result was definitely worth it.&lt;/p&gt;

&lt;p&gt;I’m extremely happy with the results of my blog migration. I am in complete
control of my content, from the words I write, the underlying code of the blog,
and even the server running it all. This was definitely a learning experience
and was worth all the work and stress. Talk soon – ejmg&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="blog" /><summary type="html">Alright, knocking on wood, but I do believe I am finished migrating my old blog
and have managed to get my new theme up and running.</summary></entry><entry><title type="html">Blog Migration</title><link href="http://ageof.info/Blog-Migration" rel="alternate" type="text/html" title="Blog Migration" /><published>2016-11-05T18:02:00-05:00</published><updated>2016-11-05T18:02:00-05:00</updated><id>http://ageof.info/Blog-Migration</id><content type="html" xml:base="http://ageof.info/Blog-Migration">&lt;h2 id=&quot;the-joys-of-web-programming&quot;&gt;the joys of web programming&lt;/h2&gt;

&lt;p&gt;I’ve had my new blog for just a few days and managed to migrate my old one to it, though the process was far from painless or straightforward. Being new to web development + Jekyll as a platform = plenty of confusion on my part. That said, I got all of my old blog posts moved over as well as most of the images.&lt;/p&gt;

&lt;p&gt;Each old post with an image has weird residual html tags that do not seem to play nicely with Jekyll’s site generator and header levels also are off here and there. I will clean these up when I have the spare time, but I’m just happy to be done with the majority of the migration.&lt;/p&gt;

&lt;p&gt;I’ll be sure to post some more updates as they come along and I plan on making some sort of guide/post with the little lessons I learned along the way.  – ejmg&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="blog" /><category term="jekyll" /><summary type="html">the joys of web programming</summary></entry><entry><title type="html">New Blog</title><link href="http://ageof.info/New-Blog" rel="alternate" type="text/html" title="New Blog" /><published>2016-10-30T22:42:06-05:00</published><updated>2016-10-30T22:42:06-05:00</updated><id>http://ageof.info/New-Blog</id><content type="html" xml:base="http://ageof.info/New-Blog">&lt;p&gt;Thanks for stopping by Ageof.Info! This is a new website hosted on my home
server and I’m building much of it from the ground up, so please pardon my mess
as I tweak and fix this website in the coming weeks. Keep an eye on this page
and in the meantime feel free to follow me
on &lt;a href=&quot;https://twitter.com/eliasjmgarcia&quot;&gt;twitter&lt;/a&gt;, &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;github&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/in/eliasjmgarcia&quot;&gt;linkedin&lt;/a&gt;, or
my &lt;a href=&quot;https://lackingmaterial.com&quot;&gt;blog(until I finally migrate it…)&lt;/a&gt;!&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><summary type="html">Thanks for stopping by Ageof.Info! This is a new website hosted on my home
server and I’m building much of it from the ground up, so please pardon my mess
as I tweak and fix this website in the coming weeks. Keep an eye on this page
and in the meantime feel free to follow me
on twitter, github, linkedin, or
my blog(until I finally migrate it…)!</summary></entry><entry><title type="html">Book Review: Living Economics</title><link href="http://ageof.info/book-review-living-economics" rel="alternate" type="text/html" title="Book Review: Living Economics" /><published>2015-07-20T13:15:12-05:00</published><updated>2015-07-20T13:15:12-05:00</updated><id>http://ageof.info/book-review-living-economics</id><content type="html" xml:base="http://ageof.info/book-review-living-economics">&lt;p&gt;Peter Boettke is an economist out of George Mason University and he specializes in the history of economic thought and institutional economics. Boettke was lucky enough to study under many notable economists, such as James Buchanan, Israel Kirzner, Gordon Tullock, and Don Lavoie. For his book &lt;em&gt;Living Economics&lt;/em&gt;, Boettke takes a different approach than others by creating a story out of economic history. In this lovely little book, Boettke takes you down economic history lane with an Austrian twist, recounting major players in economics from both the left and right and guiding you through what he believes economics is all about. In &lt;em&gt;Living Economics&lt;/em&gt;, Professor Boettke describes the profession of economics truly, as if it were alive.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/07/living.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-1218&quot; src=&quot;/assets/images/posts/living.jpg&quot; alt=&quot;Source: Amazon&quot; width=&quot;333&quot; height=&quot;499&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Why I chose it&lt;/h3&gt;
&lt;p&gt;Peter Boettke teaches at George Mason University, a school I have immense respect for and hope to one day attend. &lt;em&gt;Living Economics&lt;/em&gt; is a book meant for aspiring graduate students, and while I am far from that, I still believed I would enjoy it.&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Boettke’s book is broken into four sections, but you can read the book in any order. Within &lt;em&gt;Living Economics&lt;/em&gt; is multiple lessons on fundamental ideas in the free market tradition, and tales from various professors, Boettke himself included. Within each section are different lessons and different people, a tactic by Boettke that keeps the book fresh and interesting as you go from chapter to chapter. &lt;em&gt;Living Economics &lt;/em&gt;communicates to scholars within the field of economics and reinvigorates you with inspiration from other economists, their stories, and with guidance from Boettke himself.&lt;/p&gt;
&lt;p&gt;Within &lt;em&gt;Living Economics&lt;/em&gt;, you (re)discover the Smithian tradition of economic thought (the combination of political economy and limited intervention), new institutional economics (with an emphasis on Elinor Ostrom), public choice economics (from Tullock and Gordon), entrepreneurial economics by Kirzner and Schumpeter, the failure of socialism as told by Hayek and Mises, and multiple other economists in the tradition of Smith and the Austrian school. All of this occurs in part II of &lt;em&gt;Living Economics&lt;/em&gt;, “On Teachers of Economics,” and it by far takes up the majority of the book. While always emphasizing free markets, Boettke’s book throws a wide net of historical analysis and manages to stay interesting and informational all throughout this section.&lt;/p&gt;
&lt;p&gt;With part I of Boettke’s book, you learn more about teaching economics, or why and how you should teach it. Boettke argues that explaining economics to the population at large remains one of the most critical, and underachieved, responsibilities of economists. Explaining the market mechanism, why it works, why it fails, and how we should react are all things economists should actively strive to teach the citizens of the public in order to ensure prosperity takes root and lasts in a country. By obvious extension, Boettke also argues that as teachers to be, economists should emphasize the success of free markets to their students in class, rather than focusing on the few major exceptions like most text books do now. At the end of the day, Professor Boettke looks at teaching as one of the most honorable professions, and bias aside, I believe he makes a good argument for why it is.&lt;/p&gt;
&lt;p&gt;Finally, with Part III of &lt;em&gt;Living Economics&lt;/em&gt;, Boettke focuses on where mainstream economics has gone wrong. In this section, Boettke introduces more thinkers, especially on the left, and analyzes how and why their theorems, rather than ‘theories,’ became fact in orthodox economics. Economists such as Leon Walras, Oskar Lange, Joseph Stiglitz, and Maynard Keynes come into play much more in this section as Boettke explains, and promptly criticizes, the rise of neoclassical economics and its equilibrium models, neo-Keynesian economics, and the Chicago school as well. Austrian economics, and its various methodologies and theories, holds place as the most consistent school of economics to Boettke, and he blames mainstream thought as the reason why economists have shifted roles from ‘lowly philosophers’ to ‘high priests.’ Rather than act as cautious advisors to economic thought, economists now act as masters of reality, able to create models and concrete theorems that can predict and explain human behavior.&lt;/p&gt;
&lt;p&gt;Boettke’s book did have fourth part, but this section is only six pages long and serves only as a summation of the book.&lt;/p&gt;
&lt;h3&gt;Criticism&lt;/h3&gt;
&lt;p&gt;Overall, I loved Boettke’s work in &lt;em&gt;Living Economics&lt;/em&gt;. My only real criticism is that his writing is sometimes too much ‘stream of thought,’ an approach that leaves you rereading some passages from the book. The book is heavily slanted towards Austrian thought, but this is a matter of opinion, and I feel should not be an issue given the very nature of the book.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;It may be because I have read much more serious texts for the past two months, but Boettke’s book is serious enough to learn substantially from while remaining a lighter read for anyone interested in economic history and the profession itself. While I sat down and grinded through &lt;em&gt;Living Economics&lt;/em&gt;, you could easily pick up and drop the book over a large period of time and still not be confused because of how Boettke organized his writing. I really appreciated everything I learned from &lt;em&gt;Living Economics&lt;/em&gt;, and I am sure that in three years’ time, when I begin my journey into graduate school, I will be picking up Boettke’s book to read again. 4/5.&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="austrian" /><category term="academia" /><summary type="html">Peter Boettke is an economist out of George Mason University and he specializes in the history of economic thought and institutional economics. Boettke was lucky enough to study under many notable economists, such as James Buchanan, Israel Kirzner, Gordon Tullock, and Don Lavoie. For his book Living Economics, Boettke takes a different approach than others by creating a story out of economic history. In this lovely little book, Boettke takes you down economic history lane with an Austrian twist, recounting major players in economics from both the left and right and guiding you through what he believes economics is all about. In Living Economics, Professor Boettke describes the profession of economics truly, as if it were alive.

Why I chose it
Peter Boettke teaches at George Mason University, a school I have immense respect for and hope to one day attend. Living Economics is a book meant for aspiring graduate students, and while I am far from that, I still believed I would enjoy it.
Summary
Boettke’s book is broken into four sections, but you can read the book in any order. Within Living Economics is multiple lessons on fundamental ideas in the free market tradition, and tales from various professors, Boettke himself included. Within each section are different lessons and different people, a tactic by Boettke that keeps the book fresh and interesting as you go from chapter to chapter. Living Economics communicates to scholars within the field of economics and reinvigorates you with inspiration from other economists, their stories, and with guidance from Boettke himself.
Within Living Economics, you (re)discover the Smithian tradition of economic thought (the combination of political economy and limited intervention), new institutional economics (with an emphasis on Elinor Ostrom), public choice economics (from Tullock and Gordon), entrepreneurial economics by Kirzner and Schumpeter, the failure of socialism as told by Hayek and Mises, and multiple other economists in the tradition of Smith and the Austrian school. All of this occurs in part II of Living Economics, “On Teachers of Economics,” and it by far takes up the majority of the book. While always emphasizing free markets, Boettke’s book throws a wide net of historical analysis and manages to stay interesting and informational all throughout this section.
With part I of Boettke’s book, you learn more about teaching economics, or why and how you should teach it. Boettke argues that explaining economics to the population at large remains one of the most critical, and underachieved, responsibilities of economists. Explaining the market mechanism, why it works, why it fails, and how we should react are all things economists should actively strive to teach the citizens of the public in order to ensure prosperity takes root and lasts in a country. By obvious extension, Boettke also argues that as teachers to be, economists should emphasize the success of free markets to their students in class, rather than focusing on the few major exceptions like most text books do now. At the end of the day, Professor Boettke looks at teaching as one of the most honorable professions, and bias aside, I believe he makes a good argument for why it is.
Finally, with Part III of Living Economics, Boettke focuses on where mainstream economics has gone wrong. In this section, Boettke introduces more thinkers, especially on the left, and analyzes how and why their theorems, rather than ‘theories,’ became fact in orthodox economics. Economists such as Leon Walras, Oskar Lange, Joseph Stiglitz, and Maynard Keynes come into play much more in this section as Boettke explains, and promptly criticizes, the rise of neoclassical economics and its equilibrium models, neo-Keynesian economics, and the Chicago school as well. Austrian economics, and its various methodologies and theories, holds place as the most consistent school of economics to Boettke, and he blames mainstream thought as the reason why economists have shifted roles from ‘lowly philosophers’ to ‘high priests.’ Rather than act as cautious advisors to economic thought, economists now act as masters of reality, able to create models and concrete theorems that can predict and explain human behavior.
Boettke’s book did have fourth part, but this section is only six pages long and serves only as a summation of the book.
Criticism
Overall, I loved Boettke’s work in Living Economics. My only real criticism is that his writing is sometimes too much ‘stream of thought,’ an approach that leaves you rereading some passages from the book. The book is heavily slanted towards Austrian thought, but this is a matter of opinion, and I feel should not be an issue given the very nature of the book.
Conclusion
It may be because I have read much more serious texts for the past two months, but Boettke’s book is serious enough to learn substantially from while remaining a lighter read for anyone interested in economic history and the profession itself. While I sat down and grinded through Living Economics, you could easily pick up and drop the book over a large period of time and still not be confused because of how Boettke organized his writing. I really appreciated everything I learned from Living Economics, and I am sure that in three years’ time, when I begin my journey into graduate school, I will be picking up Boettke’s book to read again. 4/5.</summary></entry><entry><title type="html">Book Review: To the Edge</title><link href="http://ageof.info/book-review-to-the-edge" rel="alternate" type="text/html" title="Book Review: To the Edge" /><published>2015-07-17T15:00:00-05:00</published><updated>2015-07-17T15:00:00-05:00</updated><id>http://ageof.info/book-review-to-the-edge</id><content type="html" xml:base="http://ageof.info/book-review-to-the-edge">&lt;p&gt;&lt;em&gt;To the Edge: Legality, Legitimacy, and the Responses to the 2008 Financial Crisis&lt;/em&gt; was a book unlike any other historical analysis I have read so far. This was probably inevitable given the nature of the of the 2008 financial crisis, but Philip Wallach, a Brookings Institute fellow, managed to take his book to the next level of scholarly work.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/07/to-the-edge.jpg&quot;&gt;&lt;img class=&quot;wp-image-1221 size-full&quot; src=&quot;/assets/images/posts/to-the-edge.jpg&quot; alt=&quot;Source: Amazon&quot; width=&quot;333&quot; height=&quot;499&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Why I chose it&lt;/h3&gt;
&lt;p&gt;Tyler Cowen mentioned it some time ago on his blog and I by chance added it to my wishlist. One day I got an amazon gift card, and because of my desire to understand the financial crisis better, I made the leap of faith and bought this book. I do not regret that decision at all.&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;In 218 pages, Wallach lays the foundation for what I call his ‘theory-lite.’ Not quite concrete, not quite abstract, Wallach provides the basis for his theory of legitimacy, legality, their importance in the political process, and their divergence during episodes of crisis in government. Wallach calls this crisis in divergence between legitimacy and legality as “Carl Schmitt’s Challenge.”&lt;/p&gt;
&lt;p&gt;Carl Schmitt was a German (and Nazi) political theorist who’s work investigated the role of government power and its source of legitimacy. Schmitt accurately captured the dilemmas democracies face in crisis, and believed democratic governments would inevitably fail to maintain their status in the face of continued crisis. This failure stems, as Schmitt argues, from the shift in legitimacy from democratic decision making to centralized authorities who take power during crisis.&lt;/p&gt;
&lt;p&gt;While Schmitt enthusiastically embraced his philosophy by rising as one of Nazi Germany’s greatest political legitimators, his theory still provides a serious challenge to the concept and sustainability of the Rule of Law. In absence of flexible response and power, Schmitt’s political theory contends that things like due process, procedural justice, and other aspects of liberal democratic government cannot hold. This creates a paradox for democratic governments, squeezed between Rule of Law and the expediency needed by crisis fighters, as they must create a contradictory balance of executive discretion and procedural methodology.&lt;/p&gt;
&lt;p&gt;Wallach takes Schmitt’s challenge and analyzes the financial crisis through the focal points of legitimacy and legality, ergo the title of this book. After setting the state for his theory-lite, Wallach then analyzes the entirety of the 2008 Financial Crisis, the response from government ‘crisis fighters,’ and the response of elites and the general American population.&lt;/p&gt;
&lt;h4&gt;Adhocracy&lt;/h4&gt;
&lt;p&gt;A major theme Wallach emphasizes is the ad-hoc nature of the actions taken by crisis fighters Timothy Geithner (President of the New York Fed under Bush, Treasury Secretary under Obama), Ben Bernanke (Head of the Federal Reserve system under both Bush and Obama), Henry Paulson (Treasury Secretary under Bush), and Sheila Blair (Head of the FDIC under both Bush and Obama). Labeling their approach ‘adhocracy,’ Wallach explains at length just how last minute, impromptu, and unprocedural the government handled the financial crisis. Bernanke and Geithner especially made decisions in the eleventh hour of multiple episodes in the financial crisis (such as Bear Stearns, Lehman Brothers, and AIG), cajoled banks and other entities to accept their agreements, and consistently pushed the written law to its very limit and beyond.&lt;/p&gt;
&lt;p&gt;While Wallach defends their actions on consequentialist grounds, he is critical of their after-effects, especially on government legitimacy and power. Wallach argues that repeatedly stretching the law, an outcome completely inevitable in Wallach’s view, must be minimized for multiple reasons. Principally, Wallach believes abusing the law and ad-hoc behavior severely reduce the legitimacy of the law and government, and this loss of legitimacy by government will substantially hinder its ability to handle future crises. For Wallach and Schmitt alike, it does not matter how powerful the government is if people, both elites and the masses, lose faith in the legitimacy of government action.&lt;/p&gt;
&lt;h4&gt;Accountability&lt;/h4&gt;
&lt;p&gt;After an extremely in depth, objective, and well discussed retrace of the financial crisis, Wallach closes his book by looking at the accountability mechanisms used by government and possible alternatives for the future. Wallach emphasizes the place of media as a strong check against government overreach, but also shows how it falls short of capturing actions that are more ‘intrusive’ by government due the perceived legitimacy of government action. Moving beyond media, Wallach also recounts the inability of the courts to stop executive powers during crisis. Put simply, the judicial branch of the United States has consistently stood aside during crisis because it believes that the executive, given enough emergency, will simply ignore its orders, a la Jackson, Lincoln, and FDR.&lt;/p&gt;
&lt;p&gt;The greatest accountability mechanism, according to Wallach, of the previous financial crisis was the ex-post accountability mechanisms implemented in bills. Accountability boards, GAO audits, and similar mechanisms made sure that government officials were not acting in scrupulous and corrupt ways after actions were taken. Additionally, such mechanisms often gave government more power to act by granting greater legitimacy of restriction. By putting into effect certain accountability mechanisms, the elites and average citizens of a nation will believe justice will be guaranteed by retroactive actions of accountability. However, Wallach emphasizes the need for pre-existing trust between government and citizens for accountability mechanisms to be allowed.&lt;/p&gt;
&lt;h4&gt;“Looking Forward”&lt;/h4&gt;
&lt;p&gt;While Wallach provides to no sure fire guarantee of accountability, his solutions do provide food for thought. Foremost, and idealistically, Wallach believes the legislature must engage the executive branch more during crises. This ensures accountability, provides grounds for legitimacy (perceived through the democratic process), and ensures the executive does not get out of control. The next big solution is for legislators and the executive to create laws that provide clear enough guidelines for government behavior, but that do not unnecessarily constrain government action. His reasoning for this is that anything too restrictive will simply be ignored, as was seen in prior crises. Finally, Wallach proposes a generic ‘slush fund’ for the executive branch. During the financial crisis, the executive branch used the Exchange Stabilization Fund, an archaic fund meant for currency exchange emergencies, for the bailout of the Money Fund market. This was a result of Geithner and Bernanke being afraid to approach Congress for help (and risk denial), but later came across as a severe abuse of government power. Rather than pander to the idea executives will not abuse the law during crisis, Wallach concludes that by providing a sizeable, but not too large, fund for emergency executive action, crisis fighters can buy time to negotiate with Congress over appropriate actions instead of worrying about partisan fighting and abusing the existing law.&lt;/p&gt;
&lt;h3&gt;Criticism&lt;/h3&gt;
&lt;p&gt;When it comes to style, narrative, and facts, I have no qualms with Philip Wallach. His ability to objectively recount events is fantastic, and I only wish more scholars embraced his approach. However, when it comes to his own opinion, I do have to disagree. While I sympathize with Wallach’s view that, given the enormity of the crisis, the government had to intervene, he gives too much credence to the motives of political actors. Wallach almost believes that beyond some political motivation (record, image), individuals such as Paulson, a former CEO of Goldman Sachs, were driven by pure civic duty for their nation. Being such a well read scholar, Wallach is well aware of Public Choice and I wonder why he was so quick to ignore the very real incentives behind regulators to collaborate, on some level, with those they regulate.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This was a hell of a book. It challenges your world view on how the financial system and government operates, and it’s recommended reading for anyone who wants to better understand the political process, its weaknesses, and how the financial crisis came about. The book was fantastic and I can say that I learned immensely from it. 5/5&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="financial crisis" /><category term="finance" /><summary type="html">To the Edge: Legality, Legitimacy, and the Responses to the 2008 Financial Crisis was a book unlike any other historical analysis I have read so far. This was probably inevitable given the nature of the of the 2008 financial crisis, but Philip Wallach, a Brookings Institute fellow, managed to take his book to the next level of scholarly work.

Why I chose it
Tyler Cowen mentioned it some time ago on his blog and I by chance added it to my wishlist. One day I got an amazon gift card, and because of my desire to understand the financial crisis better, I made the leap of faith and bought this book. I do not regret that decision at all.
Summary
In 218 pages, Wallach lays the foundation for what I call his ‘theory-lite.’ Not quite concrete, not quite abstract, Wallach provides the basis for his theory of legitimacy, legality, their importance in the political process, and their divergence during episodes of crisis in government. Wallach calls this crisis in divergence between legitimacy and legality as “Carl Schmitt’s Challenge.”
Carl Schmitt was a German (and Nazi) political theorist who’s work investigated the role of government power and its source of legitimacy. Schmitt accurately captured the dilemmas democracies face in crisis, and believed democratic governments would inevitably fail to maintain their status in the face of continued crisis. This failure stems, as Schmitt argues, from the shift in legitimacy from democratic decision making to centralized authorities who take power during crisis.
While Schmitt enthusiastically embraced his philosophy by rising as one of Nazi Germany’s greatest political legitimators, his theory still provides a serious challenge to the concept and sustainability of the Rule of Law. In absence of flexible response and power, Schmitt’s political theory contends that things like due process, procedural justice, and other aspects of liberal democratic government cannot hold. This creates a paradox for democratic governments, squeezed between Rule of Law and the expediency needed by crisis fighters, as they must create a contradictory balance of executive discretion and procedural methodology.
Wallach takes Schmitt’s challenge and analyzes the financial crisis through the focal points of legitimacy and legality, ergo the title of this book. After setting the state for his theory-lite, Wallach then analyzes the entirety of the 2008 Financial Crisis, the response from government ‘crisis fighters,’ and the response of elites and the general American population.
Adhocracy
A major theme Wallach emphasizes is the ad-hoc nature of the actions taken by crisis fighters Timothy Geithner (President of the New York Fed under Bush, Treasury Secretary under Obama), Ben Bernanke (Head of the Federal Reserve system under both Bush and Obama), Henry Paulson (Treasury Secretary under Bush), and Sheila Blair (Head of the FDIC under both Bush and Obama). Labeling their approach ‘adhocracy,’ Wallach explains at length just how last minute, impromptu, and unprocedural the government handled the financial crisis. Bernanke and Geithner especially made decisions in the eleventh hour of multiple episodes in the financial crisis (such as Bear Stearns, Lehman Brothers, and AIG), cajoled banks and other entities to accept their agreements, and consistently pushed the written law to its very limit and beyond.
While Wallach defends their actions on consequentialist grounds, he is critical of their after-effects, especially on government legitimacy and power. Wallach argues that repeatedly stretching the law, an outcome completely inevitable in Wallach’s view, must be minimized for multiple reasons. Principally, Wallach believes abusing the law and ad-hoc behavior severely reduce the legitimacy of the law and government, and this loss of legitimacy by government will substantially hinder its ability to handle future crises. For Wallach and Schmitt alike, it does not matter how powerful the government is if people, both elites and the masses, lose faith in the legitimacy of government action.
Accountability
After an extremely in depth, objective, and well discussed retrace of the financial crisis, Wallach closes his book by looking at the accountability mechanisms used by government and possible alternatives for the future. Wallach emphasizes the place of media as a strong check against government overreach, but also shows how it falls short of capturing actions that are more ‘intrusive’ by government due the perceived legitimacy of government action. Moving beyond media, Wallach also recounts the inability of the courts to stop executive powers during crisis. Put simply, the judicial branch of the United States has consistently stood aside during crisis because it believes that the executive, given enough emergency, will simply ignore its orders, a la Jackson, Lincoln, and FDR.
The greatest accountability mechanism, according to Wallach, of the previous financial crisis was the ex-post accountability mechanisms implemented in bills. Accountability boards, GAO audits, and similar mechanisms made sure that government officials were not acting in scrupulous and corrupt ways after actions were taken. Additionally, such mechanisms often gave government more power to act by granting greater legitimacy of restriction. By putting into effect certain accountability mechanisms, the elites and average citizens of a nation will believe justice will be guaranteed by retroactive actions of accountability. However, Wallach emphasizes the need for pre-existing trust between government and citizens for accountability mechanisms to be allowed.
“Looking Forward”
While Wallach provides to no sure fire guarantee of accountability, his solutions do provide food for thought. Foremost, and idealistically, Wallach believes the legislature must engage the executive branch more during crises. This ensures accountability, provides grounds for legitimacy (perceived through the democratic process), and ensures the executive does not get out of control. The next big solution is for legislators and the executive to create laws that provide clear enough guidelines for government behavior, but that do not unnecessarily constrain government action. His reasoning for this is that anything too restrictive will simply be ignored, as was seen in prior crises. Finally, Wallach proposes a generic ‘slush fund’ for the executive branch. During the financial crisis, the executive branch used the Exchange Stabilization Fund, an archaic fund meant for currency exchange emergencies, for the bailout of the Money Fund market. This was a result of Geithner and Bernanke being afraid to approach Congress for help (and risk denial), but later came across as a severe abuse of government power. Rather than pander to the idea executives will not abuse the law during crisis, Wallach concludes that by providing a sizeable, but not too large, fund for emergency executive action, crisis fighters can buy time to negotiate with Congress over appropriate actions instead of worrying about partisan fighting and abusing the existing law.
Criticism
When it comes to style, narrative, and facts, I have no qualms with Philip Wallach. His ability to objectively recount events is fantastic, and I only wish more scholars embraced his approach. However, when it comes to his own opinion, I do have to disagree. While I sympathize with Wallach’s view that, given the enormity of the crisis, the government had to intervene, he gives too much credence to the motives of political actors. Wallach almost believes that beyond some political motivation (record, image), individuals such as Paulson, a former CEO of Goldman Sachs, were driven by pure civic duty for their nation. Being such a well read scholar, Wallach is well aware of Public Choice and I wonder why he was so quick to ignore the very real incentives behind regulators to collaborate, on some level, with those they regulate.
Conclusion
This was a hell of a book. It challenges your world view on how the financial system and government operates, and it’s recommended reading for anyone who wants to better understand the political process, its weaknesses, and how the financial crisis came about. The book was fantastic and I can say that I learned immensely from it. 5/5</summary></entry><entry><title type="html">Economic Modeling: Societal Preferences and Government</title><link href="http://ageof.info/just-economic-modeling-societal-preferences-and-government" rel="alternate" type="text/html" title="Economic Modeling: Societal Preferences and Government" /><published>2015-07-16T13:00:00-05:00</published><updated>2015-07-16T13:00:00-05:00</updated><id>http://ageof.info/just-economic-modeling-societal-preferences-and-government</id><content type="html" xml:base="http://ageof.info/just-economic-modeling-societal-preferences-and-government">&lt;p&gt;A book I just recently finished, &lt;em&gt;After War: the Political Economy of Exporting Democracy&lt;/em&gt;, has a lot of insight into the institutional and behavioral theory behind reconstruction (e.g. the nation building in Iraq and Afghanistan). One of the explanations given by Coyne, the author, left me wanting to model his theory on underlying preferences in a society and their affect on choices of government.&lt;/p&gt;
&lt;p&gt;Despite the US military's successful toppling of the Hussein regime, the people of Iraq did not collectively rally to create liberal democratic institutions. Was it because they did not agree with basis of them? Yes and no, says Coyne. There are multiple reasons why Iraqis avoided liberal democratic institutions (the fear of a strong centralized government was one, for instance) and in turn it reflected the underlying &lt;strong&gt;preferences&lt;/strong&gt; of society. Thus, while the occupation managed to change the options available to citizens (to vote, get an education, open a store), it does not guarantee that citizens will choose those options available.&lt;/p&gt;
&lt;p&gt;Coyne thus suggests that societal preferences act as a large determinant of the success for a reconstruction effort. If the underlying preferences of society do not desire liberal democratic institutions, they will not occur. I felt that this could be modeled similarly to an income-consumption graph, the same type that determines the consumption preferences of a consumer who faces a limited budget and choice between two goods.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/06/income-consumption-curve1.png&quot;&gt;&lt;img class=&quot;size-full wp-image-1177&quot; src=&quot;/assets/images/posts/income-consumption-curve1.png&quot; alt=&quot;basic income-consumption curve I created with Microsoft Publisher&quot; width=&quot;620&quot; height=&quot;446&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Assuming a utility maximizing consumer, only two equal priced goods, and a limited income, an individual will choose the outermost bundle possible with their income (the maximum amount of the two goods available, dependent on how much they value each good). In this scenario, depending on whether the consumer has budget constraint BC1 or BC2, they will attempt to purchase bundle A or B to get the most 'bang for their buck.'&lt;/p&gt;
&lt;p&gt;Now what I attempt to do is replace the goods chosen with social welfare and personal freedom on the Y and X axis respectively. Societal preferences now act as the 'budget constraint' in this model, and the indifference curve determines the type of government chosen by the society. Preferences can reflect trust, sense of equality, and tolerance of beliefs: all characteristics that become reflected in the type of government a country has.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/06/government-pref-1-1.png&quot;&gt;&lt;img class=&quot;wp-image-1186 size-full&quot; src=&quot;/assets/images/posts/government-pref-1-1.png&quot; alt=&quot;government pref 1 (1)&quot; width=&quot;620&quot; height=&quot;443&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;In the model above, the society currently reflected has underlying preferences that do not support a liberal democracy. This could be reflective of 16th century England under the Tudor Dynasty. Even if a radical republican army were to invade and overthrow the crown, the reality is that the majority of society would not support a liberal democracy. Social and formal institutions at the time were dependent upon a strong monarchy, and the economy was oriented around the various monopolies controlled and regulated by the crown. Thus, the best this society can 'purchase' is a monarchal government at bundle A.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/06/government-pref-2-2.png&quot;&gt;&lt;img class=&quot;size-full wp-image-1188&quot; src=&quot;/assets/images/posts/government-pref-2-2.png&quot; alt=&quot;Created with Microsoft Publisher&quot; width=&quot;620&quot; height=&quot;442&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;However, if there were to be a shift in underlying preferences, then the government bundle chosen can change. For instance, an endogenous change in the political climate (political revolution) can cause a major shift in preferences. This is exactly what happened after the Glorious Revolution in England where the monarchy was severely constrained by the Parliamentary system. Just as a consumer cannot buy a $5,000 computer unless they have the money, a country cannot just construct a government reflecting the preferences of an entirely different nation (such as the US attempted to do with Iraq).&lt;/p&gt;
&lt;h4&gt;Clarifications&lt;/h4&gt;
&lt;p&gt;In my abstraction, I attempt to use the basic income-consumption model to extend neoclassical theory into the realm of institutional analysis. This creates multiple caveats to my modeling for very obvious reasons, the largest being that it is very difficult to capture institutions within a model. Furthermore, I am not saying that personal freedom and social welfare are mutually exclusive, but just that there are limits to them contingent on the 'amount' of the other (e.g. whether you can kill your neighbor because you feel like it).&lt;/p&gt;
&lt;p&gt;My model also assumes that the social costs of Personal Freedom and Social Equality are the same, but reality shows that this is not true. One must just imagine a small island society with very limited resources, and it becomes clear that tight social cooperation would be vital to survival. In this scenario, the relative price of personal freedom would be very high, and personal preferences would have to adjust, regardless if they supported the idea of extreme personal freedom.&lt;/p&gt;
&lt;p&gt;Finally, I do not claim societal preferences are the only factor determining the type of government a nation has, but I do try to model how underlying preferences could determine what kind of government evolves in a society. A society that has a stronger sense of social welfare will have indifference curves reflecting that.&lt;/p&gt;
&lt;p&gt;These are just some of the many caveats associated with my basic attempt to model economic theory as I have read it. I am sure that others have done this and in a much better and precise manner.&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="modeling" /><category term="economic theory" /><summary type="html">A book I just recently finished, After War: the Political Economy of Exporting Democracy, has a lot of insight into the institutional and behavioral theory behind reconstruction (e.g. the nation building in Iraq and Afghanistan). One of the explanations given by Coyne, the author, left me wanting to model his theory on underlying preferences in a society and their affect on choices of government.
Despite the US military's successful toppling of the Hussein regime, the people of Iraq did not collectively rally to create liberal democratic institutions. Was it because they did not agree with basis of them? Yes and no, says Coyne. There are multiple reasons why Iraqis avoided liberal democratic institutions (the fear of a strong centralized government was one, for instance) and in turn it reflected the underlying preferences of society. Thus, while the occupation managed to change the options available to citizens (to vote, get an education, open a store), it does not guarantee that citizens will choose those options available.
Coyne thus suggests that societal preferences act as a large determinant of the success for a reconstruction effort. If the underlying preferences of society do not desire liberal democratic institutions, they will not occur. I felt that this could be modeled similarly to an income-consumption graph, the same type that determines the consumption preferences of a consumer who faces a limited budget and choice between two goods.

Assuming a utility maximizing consumer, only two equal priced goods, and a limited income, an individual will choose the outermost bundle possible with their income (the maximum amount of the two goods available, dependent on how much they value each good). In this scenario, depending on whether the consumer has budget constraint BC1 or BC2, they will attempt to purchase bundle A or B to get the most 'bang for their buck.'
Now what I attempt to do is replace the goods chosen with social welfare and personal freedom on the Y and X axis respectively. Societal preferences now act as the 'budget constraint' in this model, and the indifference curve determines the type of government chosen by the society. Preferences can reflect trust, sense of equality, and tolerance of beliefs: all characteristics that become reflected in the type of government a country has.
 
In the model above, the society currently reflected has underlying preferences that do not support a liberal democracy. This could be reflective of 16th century England under the Tudor Dynasty. Even if a radical republican army were to invade and overthrow the crown, the reality is that the majority of society would not support a liberal democracy. Social and formal institutions at the time were dependent upon a strong monarchy, and the economy was oriented around the various monopolies controlled and regulated by the crown. Thus, the best this society can 'purchase' is a monarchal government at bundle A.
 
However, if there were to be a shift in underlying preferences, then the government bundle chosen can change. For instance, an endogenous change in the political climate (political revolution) can cause a major shift in preferences. This is exactly what happened after the Glorious Revolution in England where the monarchy was severely constrained by the Parliamentary system. Just as a consumer cannot buy a $5,000 computer unless they have the money, a country cannot just construct a government reflecting the preferences of an entirely different nation (such as the US attempted to do with Iraq).
Clarifications
In my abstraction, I attempt to use the basic income-consumption model to extend neoclassical theory into the realm of institutional analysis. This creates multiple caveats to my modeling for very obvious reasons, the largest being that it is very difficult to capture institutions within a model. Furthermore, I am not saying that personal freedom and social welfare are mutually exclusive, but just that there are limits to them contingent on the 'amount' of the other (e.g. whether you can kill your neighbor because you feel like it).
My model also assumes that the social costs of Personal Freedom and Social Equality are the same, but reality shows that this is not true. One must just imagine a small island society with very limited resources, and it becomes clear that tight social cooperation would be vital to survival. In this scenario, the relative price of personal freedom would be very high, and personal preferences would have to adjust, regardless if they supported the idea of extreme personal freedom.
Finally, I do not claim societal preferences are the only factor determining the type of government a nation has, but I do try to model how underlying preferences could determine what kind of government evolves in a society. A society that has a stronger sense of social welfare will have indifference curves reflecting that.
These are just some of the many caveats associated with my basic attempt to model economic theory as I have read it. I am sure that others have done this and in a much better and precise manner.</summary></entry><entry><title type="html">Book Review: After War</title><link href="http://ageof.info/book-review-after-war" rel="alternate" type="text/html" title="Book Review: After War" /><published>2015-07-15T15:00:00-05:00</published><updated>2015-07-15T15:00:00-05:00</updated><id>http://ageof.info/book-review-after-war</id><content type="html" xml:base="http://ageof.info/book-review-after-war">&lt;p&gt;There is a popular joke in academia about the 'imperialism' of economics. Just about any topic and field has been covered by economists in one way or another, and with Chris Coyne's &lt;em&gt;After War: the Political Economy of Exporting Democracy&lt;/em&gt;, nation building can now fill the list. While economists can always benefit from an extra dose of humility, they are right to suggest that the economic way of thinking can help analyze and understand the world around us. For Coyne, why nation building fails is the issue he hopes to help explain.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/07/41fsiydxql-_sx329_bo1204203200_.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-1204&quot; src=&quot;/assets/images/posts/41fsiydxql-_sx329_bo1204203200_.jpg&quot; alt=&quot;Source: Amazon&quot; width=&quot;331&quot; height=&quot;499&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Why I chose it&lt;/h3&gt;
&lt;p&gt;I met Coyne my junior year of high school at a Foundation for Economic Education seminar, and I mean it when I say the man is brilliant. Reading one of his books has been a goal of mine for some time, so I took this as an opportunity. Also, it is no coincidence that the book involves institutional economics.&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Despite years of failures, the western world, under the guidance of the U.S., has repeatedly attempted to export liberal democracy to developing nations. While political scientists have offered countless theories as to why and why not these attempts work, there has been little input by economists on the issue directly. In steps Coyne, who uses theories from public choice, new institutional, and behavioral economics to analyze the inner workings of nation building, and why some nations (Japan and Germany) were successes while most nations (Haiti, Cuba, Afghanistan, Iraq, Somalia, etc) were failures.&lt;/p&gt;
&lt;p&gt;Coyne breaks his book into two major sections. In the first portion, he introduces to the reader the various ideas from economics that can be applied to nation building. This is where topics such as political economy, institutions, game theory, and expectations are introduced. Coyne explains how underlying preferences, cultural norms, and ‘meta-games’ can predict the difficulty/probability of nation building and sustaining a liberal democracy in a developing country.&lt;/p&gt;
&lt;p&gt;A great example would be the sectarian groups within Iraq that Coyne analyzes with his mesh of theory. Iraq can be broken into four overarching groups (but there are many others), Kurds, Arabs, Shi’a Muslims, and Sunni Muslims. Under the Hussein regime, both the Kurds, regardless of religion, and Shi’a majority were persecuted under the Sunni Arab minority. Hussein was able to hold Iraq together because of his authoritarian rule and a strong, militarized state that responded to Hussein’s orders. Kurds and Shi’a alike are skeptical of a centralized state, and understandably are wary of a liberal democracy. Simultaneously, Sunnis are afraid of Kurds and Shi’a Muslims, who if create a strong coalition, could exact revenge for years of oppression under Hussein. In this scenario, we see underlying preferences (distrust of government), game theory (interactions between groups), and norms (sectarian society) all interact to determine the success of reconstruction efforts.&lt;/p&gt;
&lt;p&gt;The next section of the book is Coyne’s analysis of successful and unsuccessful reconstruction efforts, the (then) current situation in Iraq and Afghanistan, and his alternative to foreign interventionism (free trade and non-interventionism). Coyne points out accurately how Germany and Japan, prior to reconstruction, had all the foundations for a liberal democratic society. Each nation was heavily industrialized, had prior democratic institutions, and was devoid of sectarian conflicts. Adding to the situation, each nation was utterly emotionally and physically devastated from the worst wars the world had seen. The other examples, Somalia and Haiti, were almost exactly the opposite, with histories rife with corruption, sectarian conflict, and no industrial base.&lt;/p&gt;
&lt;h3&gt;Criticism&lt;/h3&gt;
&lt;p&gt;My main criticism comes in two forms, one more subjective than the other. Overall, I believe Coyne simplified his analysis a little too much, and more in depth analysis would have benefited the book. More critically, however, is his alternative and his defense of it. While I agree whole heartedly with Coyne’s alternative of non-interventionist foreign policy and absolute free trade, his defense leaves you wanting more. Coyne was right to emphasize the failed record of other alternatives, but he should have provided something more (I’m not sure what) to cement his argument.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/07/coyne-e1436658489805.jpg&quot;&gt;&lt;img class=&quot;wp-image-1205 size-medium&quot; src=&quot;/assets/images/posts/coyne.jpg&quot; alt=&quot;Professor Chris Coyne, Source: Mercatus.org&quot; width=&quot;203&quot; height=&quot;300&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Great book, fascinating read, and something quick and easy to fly through. Coyne is a good writer, does not repeat himself too much (a severe problem with most economists), and was able to explain terms as plainly as possible. I agree with his analysis, and I believe anyone in policy, especially military or foreign, should read his work. &lt;strong&gt;4/5.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="war" /><category term="public choice" /><category term="afghanistan" /><category term="iraq" /><category term="interventionism" /><summary type="html">There is a popular joke in academia about the 'imperialism' of economics. Just about any topic and field has been covered by economists in one way or another, and with Chris Coyne's After War: the Political Economy of Exporting Democracy, nation building can now fill the list. While economists can always benefit from an extra dose of humility, they are right to suggest that the economic way of thinking can help analyze and understand the world around us. For Coyne, why nation building fails is the issue he hopes to help explain.

Why I chose it
I met Coyne my junior year of high school at a Foundation for Economic Education seminar, and I mean it when I say the man is brilliant. Reading one of his books has been a goal of mine for some time, so I took this as an opportunity. Also, it is no coincidence that the book involves institutional economics.
Summary
Despite years of failures, the western world, under the guidance of the U.S., has repeatedly attempted to export liberal democracy to developing nations. While political scientists have offered countless theories as to why and why not these attempts work, there has been little input by economists on the issue directly. In steps Coyne, who uses theories from public choice, new institutional, and behavioral economics to analyze the inner workings of nation building, and why some nations (Japan and Germany) were successes while most nations (Haiti, Cuba, Afghanistan, Iraq, Somalia, etc) were failures.
Coyne breaks his book into two major sections. In the first portion, he introduces to the reader the various ideas from economics that can be applied to nation building. This is where topics such as political economy, institutions, game theory, and expectations are introduced. Coyne explains how underlying preferences, cultural norms, and ‘meta-games’ can predict the difficulty/probability of nation building and sustaining a liberal democracy in a developing country.
A great example would be the sectarian groups within Iraq that Coyne analyzes with his mesh of theory. Iraq can be broken into four overarching groups (but there are many others), Kurds, Arabs, Shi’a Muslims, and Sunni Muslims. Under the Hussein regime, both the Kurds, regardless of religion, and Shi’a majority were persecuted under the Sunni Arab minority. Hussein was able to hold Iraq together because of his authoritarian rule and a strong, militarized state that responded to Hussein’s orders. Kurds and Shi’a alike are skeptical of a centralized state, and understandably are wary of a liberal democracy. Simultaneously, Sunnis are afraid of Kurds and Shi’a Muslims, who if create a strong coalition, could exact revenge for years of oppression under Hussein. In this scenario, we see underlying preferences (distrust of government), game theory (interactions between groups), and norms (sectarian society) all interact to determine the success of reconstruction efforts.
The next section of the book is Coyne’s analysis of successful and unsuccessful reconstruction efforts, the (then) current situation in Iraq and Afghanistan, and his alternative to foreign interventionism (free trade and non-interventionism). Coyne points out accurately how Germany and Japan, prior to reconstruction, had all the foundations for a liberal democratic society. Each nation was heavily industrialized, had prior democratic institutions, and was devoid of sectarian conflicts. Adding to the situation, each nation was utterly emotionally and physically devastated from the worst wars the world had seen. The other examples, Somalia and Haiti, were almost exactly the opposite, with histories rife with corruption, sectarian conflict, and no industrial base.
Criticism
My main criticism comes in two forms, one more subjective than the other. Overall, I believe Coyne simplified his analysis a little too much, and more in depth analysis would have benefited the book. More critically, however, is his alternative and his defense of it. While I agree whole heartedly with Coyne’s alternative of non-interventionist foreign policy and absolute free trade, his defense leaves you wanting more. Coyne was right to emphasize the failed record of other alternatives, but he should have provided something more (I’m not sure what) to cement his argument.
Conclusion
 
Great book, fascinating read, and something quick and easy to fly through. Coyne is a good writer, does not repeat himself too much (a severe problem with most economists), and was able to explain terms as plainly as possible. I agree with his analysis, and I believe anyone in policy, especially military or foreign, should read his work. 4/5.</summary></entry><entry><title type="html">Book Review: Structure and Change in Economic History</title><link href="http://ageof.info/book-review-structure-and-change-in-economic-history" rel="alternate" type="text/html" title="Book Review: Structure and Change in Economic History" /><published>2015-07-14T15:00:44-05:00</published><updated>2015-07-14T15:00:44-05:00</updated><id>http://ageof.info/book-review-structure-and-change-in-economic-history</id><content type="html" xml:base="http://ageof.info/book-review-structure-and-change-in-economic-history">&lt;p&gt;For economic historians, the ability to write well comes almost as second nature. For Douglass C. North, the author and Nobel winning economist behind &lt;em&gt;Structure and Change in Economic History&lt;/em&gt;, this is no exception. Published in 1981, &lt;em&gt;Structure and Change in Economic History&lt;/em&gt; is cited as one of the reasons for giving North (and his co-recipient, Robert Fogel) the 1993 Nobel Prize in Economics because of its cohesive creation and application of new institutional theory to history, known as 'New Economic History.'&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/07/51hc3vweerl-_sy344_bo1204203200_.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-1200&quot; src=&quot;/assets/images/posts/51hc3vweerl-_sy344_bo1204203200_.jpg&quot; alt=&quot;Source: Amazon&quot; width=&quot;231&quot; height=&quot;346&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Why I chose it&lt;/h3&gt;
&lt;p&gt;It's written by a universally respected new institutional scholar who won the Nobel. It would be safe to say that this falls into the list of many economists as 'must read.'&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;North splits &lt;em&gt;Structure and Change in Economic History&lt;/em&gt; into three parts, 'Theory', 'History', and 'Theory and History', an organizational tool that helps you go back and forth for any notes or passages you may need to reread.&lt;/p&gt;
&lt;p&gt;In part one, North lays down all of his new theory for explaining change through economic history, which he largely explains using institutions, transaction costs, and ideology. Through this entire section, North also provides his major criticisms of (then) current economic thought, the other social sciences, and Marxist theory. On each criticism in each chapter of part one, North then explains how his new theory can explain the gaps currently in economic history.&lt;/p&gt;
&lt;p&gt;Part two becomes an application test of North's theory, where he explains human history from the neolithic revolution to the United States, circa 1914. Between these two time posts, North breaks human history up into what he designates as the 'First' and 'Second Economic Revolutions,' time periods that slightly diverge from mainstream historical and economic analysis. In particular, the Second Economic Revolution, according to North, was not the Industrial Revolution, but rather the century following it, where in the mid-19th century science and innovation were tied together at a constant rate.&lt;/p&gt;
&lt;p&gt;Part three is rather short, and is simply a reiteration by North on his theory, its application in history, and the implications of his arguments.&lt;/p&gt;
&lt;p&gt;The most important work, in my opinion, occurs in part one, where North outlines his criticism of neoclassical economics and then puts forth his addition to economic theory. My review will focus entirely on this section. However, I want to emphasize that the other two sections of North's book are still very important and valuable, but for the sake of keeping a somewhat short review, I will have to cut out much of his work.&lt;/p&gt;
&lt;h4&gt;Theory&lt;/h4&gt;
&lt;p&gt;Neoclassical economics, with its emphasis on marginal returns, market equilibriums, and relative prices, can explain why economies remain stable (when they do) and the rational self interest of individuals. In short, neoclassical theory is great at explaining why prices lead to beneficial market coordination (prosperity) and why individuals will tend to act opportunistic, but it cannot provide an explanation for structural change over time (economic decline, stagnation) and the countless instances where individuals act collectively to overcome the free rider problem (political revolution). In face of all of this, North contends that neoclassical theory must be extended to account for these discrepancies in its current theoretical framework, a task that North takes upon himself to solve.&lt;/p&gt;
&lt;h4&gt;Ideology&lt;/h4&gt;
&lt;p&gt;Early on, North introduces his theory of ideology and its role in structures and change through history. Ideology provides explanation for almost all instances of collective action when neoclassical theory fails to do so. Class conflict, race, and religion all fall into this category and can help explain the multiple revolutions and structural changes seen through history, though I should not overemphasize North's theory of ideology.&lt;/p&gt;
&lt;p&gt;In short, where neoclassical economics fails to explain a change in history, North's theory of ideology can help bridge the gap by explaining why rational individuals, who would typically be cautious to acting against self interest, will act in a collective manner for the collective good. This is a vital addition to the literature in neoclassical economics, because it is with North that the first substantive theory of ideology is created in a neoclassical framework.&lt;/p&gt;
&lt;h4&gt;Institutions&lt;/h4&gt;
&lt;p&gt;The next major addition to neoclassical theory that North makes is his theory of institutions. For the majority of human history, universal suffering defined the condition of our species. Despite this, there were numerous occasions where societies would rise above the rest and enjoy a burst of prosperity, which combined with the gradual increase in population, meaning that something pushed humanity to perform better. This 'performance,' according to North, comes from the various economic organizational forms that have existed through time. Some forms of economic organization were more efficient than others, and through time, better and better forms came into existence. Overarching these organizational forms are &lt;em&gt;institutions, &lt;/em&gt;both formal and informal, that dictate and constrain the behavior of humans in a society.&lt;/p&gt;
&lt;p&gt;Building on his criticism of neoclassical theory, North argues that institutions are created in order to lower transaction costs in society, both for rulers and for the average peasant. Institutional norms, such as the level of 'trust' towards strangers, allow economic activities to exist more efficiently. This, in turn, allows for better economic performance and prosperity in a society. Neoclassical theory has severely neglected the analysis of transaction costs in an economy, assuming that transactions occurred 'frictionless' in society. North completely overthrows this by insisting all institutional change can be framed in terms of transaction costs, with the rise and fall of political units (governments) occurring with the rise and fall of transaction costs of enforcing rules. This is also how North creates his theory of the state, another institution which he explains as a result of transaction costs.&lt;/p&gt;
&lt;h4&gt;Criticism&lt;/h4&gt;
&lt;p&gt;Honestly, this book was amazing to read because of all of the insight North provided. Couple this with my amateur level of experience with economics, and you can understand why I have no real criticism to provide. If anything, I believe North could have expanded the last part of his book for the sake of providing better analysis, especially by providing, and further answering, counter arguments against his theory.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://lackingmaterial.files.wordpress.com/2015/07/north.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-1201&quot; src=&quot;/assets/images/posts/north.jpg&quot; alt=&quot;Douglass North, Source: University of Washington, St. Louis&quot; width=&quot;595&quot; height=&quot;357&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;If you are a student of economics, history, or just like reading about those two subjects, I cannot recommend this book enough. Yet, despite how easy it is to read North's work, I can say that I will definitely have to reread the book two or three more times to fully comprehend the gravity of North's arguments. North rightfully considered a phenomenal writer, and despite the density of his theory, he manages to pack it all in under 210 pages, showing that simplicity is truly the ultimate sophistication... at least with academic literature. &lt;strong&gt;5/5&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;/h4&gt;</content><author><name>Elias Garcia</name><email>elias.jm.garcia@pressmail.ch</email></author><category term="institutions" /><category term="new institutional" /><category term="development" /><summary type="html">For economic historians, the ability to write well comes almost as second nature. For Douglass C. North, the author and Nobel winning economist behind Structure and Change in Economic History, this is no exception. Published in 1981, Structure and Change in Economic History is cited as one of the reasons for giving North (and his co-recipient, Robert Fogel) the 1993 Nobel Prize in Economics because of its cohesive creation and application of new institutional theory to history, known as 'New Economic History.'
 
Why I chose it
It's written by a universally respected new institutional scholar who won the Nobel. It would be safe to say that this falls into the list of many economists as 'must read.'
Summary
North splits Structure and Change in Economic History into three parts, 'Theory', 'History', and 'Theory and History', an organizational tool that helps you go back and forth for any notes or passages you may need to reread.
In part one, North lays down all of his new theory for explaining change through economic history, which he largely explains using institutions, transaction costs, and ideology. Through this entire section, North also provides his major criticisms of (then) current economic thought, the other social sciences, and Marxist theory. On each criticism in each chapter of part one, North then explains how his new theory can explain the gaps currently in economic history.
Part two becomes an application test of North's theory, where he explains human history from the neolithic revolution to the United States, circa 1914. Between these two time posts, North breaks human history up into what he designates as the 'First' and 'Second Economic Revolutions,' time periods that slightly diverge from mainstream historical and economic analysis. In particular, the Second Economic Revolution, according to North, was not the Industrial Revolution, but rather the century following it, where in the mid-19th century science and innovation were tied together at a constant rate.
Part three is rather short, and is simply a reiteration by North on his theory, its application in history, and the implications of his arguments.
The most important work, in my opinion, occurs in part one, where North outlines his criticism of neoclassical economics and then puts forth his addition to economic theory. My review will focus entirely on this section. However, I want to emphasize that the other two sections of North's book are still very important and valuable, but for the sake of keeping a somewhat short review, I will have to cut out much of his work.
Theory
Neoclassical economics, with its emphasis on marginal returns, market equilibriums, and relative prices, can explain why economies remain stable (when they do) and the rational self interest of individuals. In short, neoclassical theory is great at explaining why prices lead to beneficial market coordination (prosperity) and why individuals will tend to act opportunistic, but it cannot provide an explanation for structural change over time (economic decline, stagnation) and the countless instances where individuals act collectively to overcome the free rider problem (political revolution). In face of all of this, North contends that neoclassical theory must be extended to account for these discrepancies in its current theoretical framework, a task that North takes upon himself to solve.
Ideology
Early on, North introduces his theory of ideology and its role in structures and change through history. Ideology provides explanation for almost all instances of collective action when neoclassical theory fails to do so. Class conflict, race, and religion all fall into this category and can help explain the multiple revolutions and structural changes seen through history, though I should not overemphasize North's theory of ideology.
In short, where neoclassical economics fails to explain a change in history, North's theory of ideology can help bridge the gap by explaining why rational individuals, who would typically be cautious to acting against self interest, will act in a collective manner for the collective good. This is a vital addition to the literature in neoclassical economics, because it is with North that the first substantive theory of ideology is created in a neoclassical framework.
Institutions
The next major addition to neoclassical theory that North makes is his theory of institutions. For the majority of human history, universal suffering defined the condition of our species. Despite this, there were numerous occasions where societies would rise above the rest and enjoy a burst of prosperity, which combined with the gradual increase in population, meaning that something pushed humanity to perform better. This 'performance,' according to North, comes from the various economic organizational forms that have existed through time. Some forms of economic organization were more efficient than others, and through time, better and better forms came into existence. Overarching these organizational forms are institutions, both formal and informal, that dictate and constrain the behavior of humans in a society.
Building on his criticism of neoclassical theory, North argues that institutions are created in order to lower transaction costs in society, both for rulers and for the average peasant. Institutional norms, such as the level of 'trust' towards strangers, allow economic activities to exist more efficiently. This, in turn, allows for better economic performance and prosperity in a society. Neoclassical theory has severely neglected the analysis of transaction costs in an economy, assuming that transactions occurred 'frictionless' in society. North completely overthrows this by insisting all institutional change can be framed in terms of transaction costs, with the rise and fall of political units (governments) occurring with the rise and fall of transaction costs of enforcing rules. This is also how North creates his theory of the state, another institution which he explains as a result of transaction costs.
Criticism
Honestly, this book was amazing to read because of all of the insight North provided. Couple this with my amateur level of experience with economics, and you can understand why I have no real criticism to provide. If anything, I believe North could have expanded the last part of his book for the sake of providing better analysis, especially by providing, and further answering, counter arguments against his theory.
Conclusion
 
If you are a student of economics, history, or just like reading about those two subjects, I cannot recommend this book enough. Yet, despite how easy it is to read North's work, I can say that I will definitely have to reread the book two or three more times to fully comprehend the gravity of North's arguments. North rightfully considered a phenomenal writer, and despite the density of his theory, he manages to pack it all in under 210 pages, showing that simplicity is truly the ultimate sophistication... at least with academic literature. 5/5</summary></entry></feed>
